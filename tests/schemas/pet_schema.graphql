type Query {
  pets(first: Int): [Pet!]
  twice_value(value: Int!): Int!
}

interface Pet {
  name: String
}

type Cat implements Pet {
  name: String
  meows: Boolean
}

type Dog implements Pet {
  name: String
  woofs: Boolean
}

input TestInput {
  int_field: Int!
  str_field: String
}

enum Country {
  JAPAN
  AMERICA
  CHINA
}

union Animal = Dog | Cat

scalar DateTime
